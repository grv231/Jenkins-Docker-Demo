node {
   def git_commit_id
   stage('Prepare') {
     scm {
        git('git://github.com/grv231/docker-demo.git') {  node -> // is hudson.plugins.git.GitSCM
            node / gitConfigName('TestUser')
            node / gitConfigEmail('Test@test.com')
        }
     sh "git rev-parse --short HEAD > .git/commit-id"
     git_commit_id = readFile('.git/commit-id').trim()
   }
   
   stage('test') {
     def testContainer = docker.image('node:4.6')
     testContainer.pull()
     testContainer.inside {
       sh 'npm install --only=dev'
       sh 'npm test'
     }
   }
   stage('Running Tests with a Database') {
     def mysqlContainer = docker.image('mysql').run("-e MYSQL_ALLOW_EMPTY_PASSWORD=yes") 
     def testContainer = docker.image('node:4.6')
     testContainer.pull()
     testContainer.inside("--link ${mysql.id}:mysql") { // using linking, mysql will be available at host: mysql, port: 3306
          sh 'npm install --only=dev' 
          sh 'npm test'                     
     }                                   
     mysqlContainer.stop()
   }                                     
   stage('Pushing builds in Docker hub') {            
     docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
       def app = docker.build("grv231/nodejs-docker-jenkins-demo:${git_commit_id}", '.').push()
     }                                     
   }                                       
}                                          
